require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.0'
install! 'cocoapods', :deterministic_uuids => false

target 'monsuivipsy' do
  config = use_native_modules!

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'RNCPushNotificationIOS', :path => '../node_modules/@react-native-community/push-notification-ios'
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'
  pod 'react-native-pdf', :path => '../node_modules/react-native-pdf'

  target 'monsuivipsyTests' do
    inherit! :complete
    # Pods for testing
  end

  use_flipper!({ 'Flipper' => '0.250.0' })

  ENVFILES = {
    'Debug' => '$(PODS_ROOT)/../../.env.local',
    'Release' => '$(PODS_ROOT)/../../.env',
  }

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Default configurations
        config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
        config.build_settings["ONLY_ACTIVE_ARCH"] = "YES"
        
        # Code signing settings
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
        config.build_settings['CODE_SIGNING_IDENTITY'] = '-'
        config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = '-'
        
        # C++ configurations
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '_LIBCPP_DISABLE_AVAILABILITY=1'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-std=c++17'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_CXX98_FUNCTION_BASE=1'
        
        # Reanimated specific fix
        if target.name == 'RNReanimated'
          # Get the version from package.json
          require 'json'
          package_json = JSON.parse(File.read(File.join(__dir__, '../node_modules/react-native-reanimated/package.json')))
          version = package_json['version']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << "REANIMATED_VERSION_STRING=\\\"#{version}\\\""
        end
        
        # Additional RTCFolly specific fixes
        if target.name == "RCT-Folly"
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_MOBILE=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_NO_CONFIG'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_HAVE_CLOCK_GETTIME=1'
        end

        # Fix for boost
        if target.name =~ /boost/
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_CXX98_FUNCTION_BASE=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_CXX11_ALLOCATOR=1'
        end

        # Enable signing for the main target only
        if target.name == 'monsuivipsy'
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'YES'
          config.build_settings['CODE_SIGNING_REQUIRED'] = 'YES'
          config.build_settings.delete('CODE_SIGNING_IDENTITY')
          config.build_settings.delete('EXPANDED_CODE_SIGN_IDENTITY')
        end
      end
    end
  end
end